---
- name: Check for preexisting connection for VPN.
  command: nmcli -t -f name,state connection
  changed_when: false
  register: nmcli_connection_check

- name: Store running state of VPN.
  set_fact:
    digitalocean_vpn_exists: digitalocean_vpn_nm_connection_name in nmcli_connection_check.stdout

  # Hacky method for figuring out the absolute path of the client config directory.
- name: Get current directory.
  command: pwd
  changed_when: false
  register: current_directory

- name: Store fullpath to VPN client config directory.
  set_fact:
    client_config_dir_fullpath: "{{ current_directory.stdout }}/{{ digitalocean_vpn_client_cert_dir }}"

- name: Check whether client cert exists.
  stat:
    path: "{{ client_config_dir_fullpath }}"
  register: cert_check_result

- name: Declare missing client config directory.
  fail:
    msg: >
      Could not find client config directory at {{ client_config_dir_fullpath }}.
  when: cert_check_result.stat.exists == false

- name: Create connection for VPN.
  command: >
    nmcli connection add
    con-name "{{ digitalocean_vpn_nm_connection_name }}"
    ifname tun0
    type vpn
    vpn-type openvpn
  when: digitalocean_vpn_nm_connection_name not in nmcli_connection_check.stdout

- name: Add VPN config options to connection.
  command: >
    nmcli connection modify
    id "{{ digitalocean_vpn_nm_connection_name }}"
    vpn.data "
    cert-pass-flags = 0,
    key = {{ client_config_dir_fullpath }}/laptop.key,
    connection-type = tls,
    remote = {{ hostvars['vpn'].ansible_default_ipv4.address }},
    cert = {{ client_config_dir_fullpath }}/laptop.crt,
    ca = {{ client_config_dir_fullpath }}/ca.crt,
    comp-lzo = yes
    "

- name: Activate VPN connection.
  command: nmcli connection up id "{{ digitalocean_vpn_nm_connection_name }}"
  when: "'{{ digitalocean_vpn_nm_connection_name }}:activated' not in nmcli_connection_check.stdout"

